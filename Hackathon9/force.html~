<!DOCTYPE html>
<head>
    <title>A day in the life @CDP!</title>
    <link rel="stylesheet" href="http://www.w3schools.com/lib/w3.css">
    <meta charset="utf-8">
</head>
<style>

.label {
  color:  #cccccc;
  font-size: 10px;
  font-family: Arial;
}

.node {
  stroke: #cccccc;
  stroke-width: 1.5px;
}

.link {
  stroke-opacity: .6;
}

.node:hover text {
  display: none;
  color: #cccccc;
  font: 10px sans-serif;
}

.node:hover circle {
  fill: #000;
}

.node:hover text {
  fill: #000;
}

.cell {
  fill: none;
  pointer-events:all;
}

#background {
  background-color: #333333;
}

#title {
  font-size: 18;
  font-family: Helvetica, sans-serif;
  color: #ffffff;
  margin-bottom: 0px;
}

#subtitle {
  font-family: Helvetica, sans-serif;
  font-size: 50px;
  color: #dddddd;
  margin-bottom: 0px;
}

#container {
  margin-top: 100px;
}

.legend rect {
  fill:white;
  stroke:black;
  opacity:0.8;}

.chatterlog{
    background: #333333;
    padding: 10px;
}

.chatterpost{
    border-bottom-style: solid;
    border-top-style: solid;
    border-color: #aaaaaa;
    border-width: 1px;
    background: #333333;
    padding: 10px 10px 10px 60px; 
    margin-bottom: 20px;
    background-image: url(pat-01.png);
    background-position:8px center;
    background-repeat:no-repeat;
    color: #ffffff;
}
.chattercomment{
    border-radius: 5px;
    background: #333333;
    margin: 5px 5px 5px 30px;
    padding: 10px;
    border: #3c87ef;
    border-width: 10px;
    border-left-style: solid;
    color: #dddddd;
}

.left {
  float: left;
}

.right {
  float: right;
}

</style>

<body id="background">
  <div class="w3-container">
    <div>
      <p id="title">A DAY IN THE LIFE</p>
      <p id="subtitle">DVWG Chatter</p>
    </div>
  </div>

  <div id="chatterlog" class="chatterlog" style="overflow-y:scroll; padding-right: 40px; height: 1000px; width: 30%; float: right;" > </div>

  <script src="https://code.jquery.com/jquery-1.10.2.js"></script>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="d3.legend.js"></script>

<div style = "width: 70%;">
<script>

d3.selection.prototype.moveToFront = function() {
  return this.each(function(){
    this.parentNode.appendChild(this);
  });
}



var width = 1000,
    height = 950;

var heart_start_r = 4,
    heart_end_r = 7;

var color = d3.scale.category10();

var nodes = [],
    links = [],
    labels = [];

var force = d3.layout.force()
    .nodes(nodes)
    .links(links)
    .charge(-250)
    .linkDistance(150)
    .size([width, height])
    .on("tick", tick);

var voronoi = d3.geom.voronoi()
  .x(function(d) {return d.x;})
  .y(function(d) {return d.y;})
  .clipExtent([[0,0], [width, height]]);


var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

var node = svg.selectAll(".node"),
    link = svg.selectAll(".link"),
    label = svg.selectAll(".label");

var all_links = [];

var live_nodes = [];

// 1. Add three nodes and three links.
setTimeout(function() {

    d3.json("chatter.json", function(error, graph) {
	if (error) return console.warn(error);

	Array.prototype.push.apply(nodes,graph.nodes);
	all_links = graph.links;
	//Array.prototype.push.apply(links,graph.links);
	live_nodes.push(nodes[0]);
	start();
    });
}, 0);


setInterval(function(){
    if(all_links.length > 0){
	var newlink = all_links.shift();
	links.push(newlink);
	
	//add a heart beat to live nodes
	if(live_nodes.indexOf(newlink.source.name)==-1){
	    live_nodes.push(newlink.source);
	}
	if(live_nodes.indexOf(newlink.target.name)==-1){
	    live_nodes.push(newlink.target);
	}

	//append the chatter to the log div
	if(newlink.text){
	    var divclass = 'chattercomment';
	    if(newlink.source == newlink.target){
		divclass = 'chatterpost';
	    }
	    $("#chatterlog").prepend("<div class='"+divclass+"'>"+newlink.text+"</div>");
	}
	
	startHeartBeat(node.filter(function(d){return live_nodes.indexOf(d.id) != -1;}));
	start();
    }
}, 60);


function start() {
  link = link.data(force.links());
  link.enter()
	.append("line", ".node")
	.attr("class", "link")
        .attr("stroke", function(d){
	    if (d.weight==1){
        /*blue*/
        return "#3c87ef";
	    }else if (d.weight==2){
        /*pink*/
        return "#d1005d";
      }else if(d.weight==0){
        /*green*/
        return "#b8fa2d";
      }
	    });
  link.exit().remove();

  node = node.data(force.nodes(), function(d) { return d.name;});
  node.enter().append("circle").attr("r", 4).attr("name", function(d){return d.name;}).style("fill","#ccc").call(force.drag);
  node.exit().remove();

  label = label.data(force.nodes(), function(d) { return d.name;});
  label.enter().append("text").attr("class", "label").text(function(d) { return d.name;}).style("fill", "#cccccc");
  label.exit().remove();


  label.on("mouseover", function(d)
 {
     /*d3.select(labels[0][d.name]).style("visibility","visible")*/
     d3.select("#tooltipName").text(labels[0][d.name]);
 })
.on("mouseout", function(d)
 {
     d3.select(labels[0][d.name]).style("visibility","hidden")
 })
  
  force.start();
}

function tick() {
  node.attr("cx", function(d) { return d.x; })
      .attr("cy", function(d) { return d.y; })

  link.attr("x1", function(d) { return d.source.x; })
      .attr("y1", function(d) { return d.source.y; })
      .attr("x2", function(d) { return d.target.x; })
      .attr("y2", function(d) { return d.target.y; });

  label
        .attr("x", function(d) { return d.x + 8; })
        .attr("y", function(d) { return d.y; });

  /*d3.selectAll(".node").moveToFront();*/
  node.moveToFront();
}



function startHeartBeat(selection){
    selection.transition()
	.style("fill", function(d){
    if (d.weight == 1){
      /*blue 3c87ef*/
      return "#b8fa2d";
    }else if (d.weight == 2){
      /*pink d1005d*/
      return "#b8fa2d";
    }else{
      /*green*/
      return "#b8fa2d";
    }
  })
        .attr("r", heart_end_r)
        .each("end", heartBeat);
}

function heartBeat(){
    if(d3.select(this).attr("r")== heart_start_r){
        d3.select(this).transition()
            .duration(500)
            .attr("r",  heart_end_r)
            .each("end", heartBeat);
    }
    else{
        d3.select(this).transition()
            .duration(200)
            .attr("r",  heart_start_r)
            .each("end", heartBeat);
    }    
}

</script>
</div>
</body>
</html>
